# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""The action linked to an event"""
enum Action {
  ADD
  SUBSTRACT
}

"""Category model"""
type Category {
  _id: ID!
  action: Positivity!
  name: String!
  userId: String
}

input CategoryInput {
  action: Positivity = CHOICE
  name: String!
}

input ChangePasswordInput {
  confirmNewPassword: String!
  newPassword: String!
  oldPassword: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""Event model"""
type Event {
  _id: ID!
  action: Action!
  amount: Float!
  body: String!
  category: Category!
  createdAt: DateTime!
  date: DateTime!
  recurrent: Boolean!
}

input EventInput {
  action: Action!
  amount: Float!
  body: String!
  categoryId: String!
  date: DateTime!
  recurrent: Boolean!
}

"""Goal Model"""
type Goal {
  _id: ID!
  amount: Float
  completed: Boolean!
  completionDate: DateTime
  createdAt: DateTime!
  name: String!
  totalSavings: Float!
  userId: String!
}

input GoalInput {
  amount: Float
  name: String!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  addNewCategory(categoryInfo: CategoryInput!): Category!
  addSavings(savingsInfo: SavingsInput!): Savings!
  changePassword(userInput: ChangePasswordInput!): User!
  completeGoal(goalId: String!): Goal!
  createEvent(eventInput: EventInput!): Event!
  createGoal(goalInfo: GoalInput!): Goal!
  login(userInput: LoginInput!): User!
  register(userInput: RegisterInput!): User!
  removeCategory(id: String!): String
  removeEvent(eventId: String!): String!
  removeGoal(goalId: String!): String!
  removeSavings(savingsId: String!): String!
  updateGoal(goalId: String!, goalInfo: GoalInput!): Goal!
  updateInfo(userInput: PersonnalInfoInput!): User!
}

input PersonnalInfoInput {
  firstName: String!
  lastName: String!
  username: String!
}

"""The effect of a category"""
enum Positivity {
  """This let user choose the effect."""
  CHOICE
  NEGATIVE
  POSITIVE
}

type Query {
  getCategories: [Category!]!
  getGoals: [Goal!]!
  getSavings: [Savings!]!
  getSavingsByGoal(goalId: String!): [Savings!]!
  getUserEvents: [Event!]!
}

input RegisterInput {
  confirmPassword: String!
  email: String!
  firstName: String
  lastName: String
  password: String!
  username: String
}

"""Savings model"""
type Savings {
  _id: ID!
  amount: Float!
  createdAt: DateTime!
  goal: Goal!
  userId: String!
}

input SavingsInput {
  amount: Float!
  goalId: String!
}

"""User model"""
type User {
  _id: ID!
  balance: Float!
  createdAt: DateTime!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  token: String!
  username: String!
}
